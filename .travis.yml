language: python
python:
  - "2.6"
  - "2.7"
  - "3.2"
env:
  # lucid
  - HG='1.4.2' BZR=2.1.4 GIT=v1.7.0.4 SVN=1.6.6 PYYAML=3.09
  # natty
  # - HG='1.6.3' BZR=2.3.4 GIT=v1.7.4.1 SVN=1.6.6 PYYAML=3.09
  # - HG='1.7.5' BZR=2.3.4 GIT=v1.7.4.1 SVN=1.6.6 PYYAML=3.09
  # # oneiric
  # - HG='1.9.1' BZR=2.4.1 GIT=v1.7.5.4 SVN=1.6.12 PYYAML=3.09
  # precise
  - HG='2.0.2' BZR=2.5.0 GIT=v1.7.9.5 SVN=1.6.17 PYYAML=3.10
  # quantal
  - HG='2.2.2' BZR=2.6.0~beta2 GIT=v1.7.10.4 SVN=1.7.5 PYYAML=3.10
# bzr 2.1.1 only builds with python 2.6
matrix:
  exclude:
    - python: "2.7"
      env: HG='1.4.2' BZR=2.1.4 GIT=v1.7.0.4 SVN=1.6.6 PYYAML=3.09
    - python: "3.2"
      env: HG='1.4.2' BZR=2.1.4 GIT=v1.7.0.4 SVN=1.6.6 PYYAML=3.09
before_install:
 - export REPO=`pwd | sed s,^/home/travis/builds/,,g`
install:
  - sudo apt-get install -qq python3-yaml python3-dev
  - sudo apt-get install -qq libapr1 libapr1-dev libaprutil1 libaprutil1-dev libneon27 libneon27-dev libc6-dev g++ gcc
  - echo $PYTHONPATH
  - python -c 'import sys;print(sys.path)'
  - python setup.py build
# cannot build mercurial and bzr using py3k, but cannot use python2 in python2.6 case
  - export PY2K=`python -c 'import sys; print("python2" if (sys.version_info[0] == 3) else  "python")'`
  - pip install coverage
  - pip install cython
  - pip install "pyyaml<=$PYYAML" > pyaml-warnings.log 2>&1 || (cat pyaml-warnings.log && false)
  - pip install python-dateutil
  - cd $HOME/builds && wget http://mercurial.selenic.com/release/mercurial-$HG.tar.gz && tar -xf mercurial-$HG.tar.gz && cd mercurial-$HG && sudo $PY2K setup.py install > hg_install.log 2>&1 || (cat hg_install.log && false)
# did not find single source for old git tarballs
  - cd $HOME/builds && git clone git://git.kernel.org/pub/scm/git/git.git && cd git && git checkout $GIT && make prefix=/usr all > git_install.log 2>&1 || (cat git_install.log && false) && sudo make prefix=/usr install && cd $HOME/builds
  - cd $HOME/builds && wget http://archive.ubuntu.com/ubuntu/pool/main/b/bzr/bzr_$BZR.orig.tar.gz && tar -xf bzr_$BZR.orig.tar.gz && cd bzr-* && sudo $PY2K setup.py install build_ext --allow-python-fallback > bzr_install.log 2>&1 || (cat bzr_install.log && false) && cd $HOME/builds
# subversion has complex dependencies
  - cd $HOME/builds && wget http://archive.apache.org/dist/subversion/subversion-$SVN.tar.gz && tar -xf subversion-$SVN.tar.gz && cd subversion-$SVN && ./configure --without-berkeley-db --without-apache --without-neon --without-swig --disable-nls > svn_install.log 2>&1 || (cat svn_install.log && false) && make -j && sudo make install > svn_install.log 2>&1 || (cat svn_install.log && false) && cd $HOME/builds
  - hg --version
  - bzr --version
  - git --version
  - svn --version
# Set git config to silence some stuff in the tests
  - git config --global user.email "foo@example.com"
  - git config --global user.name "Foo Bar"
# Set the hg user
  - echo -e "[ui]\nusername = Your Name <your@mail.com>" >> ~/.hgrc
# Set the bzr user
  - bzr whoami "Your Name <name@example.com>"
  - cd $HOME/builds/$REPO
# command to run tests
script:
  - nosetests --with-coverage --cover-package vcstools
notifications:
  email: false
